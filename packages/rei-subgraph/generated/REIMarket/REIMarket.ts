// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Applied extends ethereum.Event {
  get params(): Applied__Params {
    return new Applied__Params(this);
  }
}

export class Applied__Params {
  _event: Applied;

  constructor(event: Applied) {
    this._event = event;
  }

  get lendingNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get fractionalisedId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get fractionalisedNftAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get numberOfFractions(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get Loanee(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get loanAmountPerFraction(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get interestPerFractionInPercentage(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get repayByTimeStamp(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[8].value.toI32();
  }
}

export class InterestPaid extends ethereum.Event {
  get params(): InterestPaid__Params {
    return new InterestPaid__Params(this);
  }
}

export class InterestPaid__Params {
  _event: InterestPaid;

  constructor(event: InterestPaid) {
    this._event = event;
  }

  get lendingNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get numberOfInvesters(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get numberOfFractionsInvested(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get invester(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get amountInvestedByInvester(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Invested extends ethereum.Event {
  get params(): Invested__Params {
    return new Invested__Params(this);
  }
}

export class Invested__Params {
  _event: Invested;

  constructor(event: Invested) {
    this._event = event;
  }

  get lendingNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get numberOfFractionsInvested(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get numberOfInvesters(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get startedAt(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get invester(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get amountInvestedByInvester(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Repayed extends ethereum.Event {
  get params(): Repayed__Params {
    return new Repayed__Params(this);
  }
}

export class Repayed__Params {
  _event: Repayed;

  constructor(event: Repayed) {
    this._event = event;
  }

  get lendingNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class WithDrawalLoan extends ethereum.Event {
  get params(): WithDrawalLoan__Params {
    return new WithDrawalLoan__Params(this);
  }
}

export class WithDrawalLoan__Params {
  _event: WithDrawalLoan;

  constructor(event: WithDrawalLoan) {
    this._event = event;
  }

  get lendingNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class WithdrawalBeforeFunded extends ethereum.Event {
  get params(): WithdrawalBeforeFunded__Params {
    return new WithdrawalBeforeFunded__Params(this);
  }
}

export class WithdrawalBeforeFunded__Params {
  _event: WithdrawalBeforeFunded;

  constructor(event: WithdrawalBeforeFunded) {
    this._event = event;
  }

  get lendingNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get numberOfFractionsInvested(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get numberOfInvesters(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get invester(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get amountInvestedByInvester(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class REIMarket extends ethereum.SmartContract {
  static bind(address: Address): REIMarket {
    return new REIMarket("REIMarket", address);
  }

  USDTAddress(): Address {
    let result = super.call("USDTAddress", "USDTAddress():(address)", []);

    return result[0].toAddress();
  }

  try_USDTAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("USDTAddress", "USDTAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  needUSDT(lendingNumber: BigInt, _numberOfFraction: BigInt): BigInt {
    let result = super.call("needUSDT", "needUSDT(uint256,uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(lendingNumber),
      ethereum.Value.fromUnsignedBigInt(_numberOfFraction)
    ]);

    return result[0].toBigInt();
  }

  try_needUSDT(
    lendingNumber: BigInt,
    _numberOfFraction: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "needUSDT",
      "needUSDT(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(lendingNumber),
        ethereum.Value.fromUnsignedBigInt(_numberOfFraction)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  relaxationPeriodForlonee(): BigInt {
    let result = super.call(
      "relaxationPeriodForlonee",
      "relaxationPeriodForlonee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_relaxationPeriodForlonee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "relaxationPeriodForlonee",
      "relaxationPeriodForlonee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get fractionaliser(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get usdtAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApplyForLoanCall extends ethereum.Call {
  get inputs(): ApplyForLoanCall__Inputs {
    return new ApplyForLoanCall__Inputs(this);
  }

  get outputs(): ApplyForLoanCall__Outputs {
    return new ApplyForLoanCall__Outputs(this);
  }
}

export class ApplyForLoanCall__Inputs {
  _call: ApplyForLoanCall;

  constructor(call: ApplyForLoanCall) {
    this._call = call;
  }

  get _fractionalisedId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _numberOfFractions(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _loanAmountPerFraction(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _interestPerFractionInPercentage(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get repayByTimeStamp(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class ApplyForLoanCall__Outputs {
  _call: ApplyForLoanCall;

  constructor(call: ApplyForLoanCall) {
    this._call = call;
  }
}

export class GetBackInvestmentWithInterestCall extends ethereum.Call {
  get inputs(): GetBackInvestmentWithInterestCall__Inputs {
    return new GetBackInvestmentWithInterestCall__Inputs(this);
  }

  get outputs(): GetBackInvestmentWithInterestCall__Outputs {
    return new GetBackInvestmentWithInterestCall__Outputs(this);
  }
}

export class GetBackInvestmentWithInterestCall__Inputs {
  _call: GetBackInvestmentWithInterestCall;

  constructor(call: GetBackInvestmentWithInterestCall) {
    this._call = call;
  }

  get lendingNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class GetBackInvestmentWithInterestCall__Outputs {
  _call: GetBackInvestmentWithInterestCall;

  constructor(call: GetBackInvestmentWithInterestCall) {
    this._call = call;
  }
}

export class InvestCall extends ethereum.Call {
  get inputs(): InvestCall__Inputs {
    return new InvestCall__Inputs(this);
  }

  get outputs(): InvestCall__Outputs {
    return new InvestCall__Outputs(this);
  }
}

export class InvestCall__Inputs {
  _call: InvestCall;

  constructor(call: InvestCall) {
    this._call = call;
  }

  get lendingNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _numberOfFraction(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class InvestCall__Outputs {
  _call: InvestCall;

  constructor(call: InvestCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RepayCall extends ethereum.Call {
  get inputs(): RepayCall__Inputs {
    return new RepayCall__Inputs(this);
  }

  get outputs(): RepayCall__Outputs {
    return new RepayCall__Outputs(this);
  }
}

export class RepayCall__Inputs {
  _call: RepayCall;

  constructor(call: RepayCall) {
    this._call = call;
  }

  get lendingNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RepayCall__Outputs {
  _call: RepayCall;

  constructor(call: RepayCall) {
    this._call = call;
  }
}

export class SetFractionaliserContractCall extends ethereum.Call {
  get inputs(): SetFractionaliserContractCall__Inputs {
    return new SetFractionaliserContractCall__Inputs(this);
  }

  get outputs(): SetFractionaliserContractCall__Outputs {
    return new SetFractionaliserContractCall__Outputs(this);
  }
}

export class SetFractionaliserContractCall__Inputs {
  _call: SetFractionaliserContractCall;

  constructor(call: SetFractionaliserContractCall) {
    this._call = call;
  }

  get fractionaliser(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFractionaliserContractCall__Outputs {
  _call: SetFractionaliserContractCall;

  constructor(call: SetFractionaliserContractCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateUSDTCall extends ethereum.Call {
  get inputs(): UpdateUSDTCall__Inputs {
    return new UpdateUSDTCall__Inputs(this);
  }

  get outputs(): UpdateUSDTCall__Outputs {
    return new UpdateUSDTCall__Outputs(this);
  }
}

export class UpdateUSDTCall__Inputs {
  _call: UpdateUSDTCall;

  constructor(call: UpdateUSDTCall) {
    this._call = call;
  }

  get usdtAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateUSDTCall__Outputs {
  _call: UpdateUSDTCall;

  constructor(call: UpdateUSDTCall) {
    this._call = call;
  }
}

export class WithdrawBeforeFundedCall extends ethereum.Call {
  get inputs(): WithdrawBeforeFundedCall__Inputs {
    return new WithdrawBeforeFundedCall__Inputs(this);
  }

  get outputs(): WithdrawBeforeFundedCall__Outputs {
    return new WithdrawBeforeFundedCall__Outputs(this);
  }
}

export class WithdrawBeforeFundedCall__Inputs {
  _call: WithdrawBeforeFundedCall;

  constructor(call: WithdrawBeforeFundedCall) {
    this._call = call;
  }

  get lendingNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _numberOfFraction(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawBeforeFundedCall__Outputs {
  _call: WithdrawBeforeFundedCall;

  constructor(call: WithdrawBeforeFundedCall) {
    this._call = call;
  }
}

export class WithdrawLoanCall extends ethereum.Call {
  get inputs(): WithdrawLoanCall__Inputs {
    return new WithdrawLoanCall__Inputs(this);
  }

  get outputs(): WithdrawLoanCall__Outputs {
    return new WithdrawLoanCall__Outputs(this);
  }
}

export class WithdrawLoanCall__Inputs {
  _call: WithdrawLoanCall;

  constructor(call: WithdrawLoanCall) {
    this._call = call;
  }

  get lendingNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawLoanCall__Outputs {
  _call: WithdrawLoanCall;

  constructor(call: WithdrawLoanCall) {
    this._call = call;
  }
}
