type Application @entity {
  id: ID!
  applicationNumber: BigInt!
  applicant: User!
  name: String!
  description: String!
  imageURI: String!
  country: String!
  city: String!
  gpsCoordinates: String!
  surfaceAreaInMTRs: BigInt!
  applicationStatus: WithStatus!
}

type WithStatus @entity {
  id: ID!
  applications: [Application!]! @derivedFrom(field: "applicationStatus")
}

type User @entity {
  id: ID!
  applications: [Application!]! @derivedFrom(field: "applicant")
}

type Token @entity {
  id: ID!
  tokenID: BigInt!
  owner: TokenUser!
  tokenURI: String!
}

type TokenUser @entity {
  id: ID!
  tokens: [Token!]! @derivedFrom(field: "owner")
}

type Fractionalised @entity {
  id: ID!
  fractionalisedId: BigInt!
  fractionaliser: UserFractionalised!
  fractionalisedNftAddress: Bytes!
  fractionQuantity: BigInt!
  tokenId: BigInt!
  tokenURI: String!
  NFTContractAddress: Bytes!
}

type UserFractionalised @entity {
  id: ID!
  fractionaliseds: [Fractionalised!]! @derivedFrom(field: "fractionaliser")
}

# type Applied @entity {
#   id: ID!
#   lendingNumber: BigInt! # uint256
#   fractionalisedId: BigInt! # uint256
#   numberOfFractions: BigInt! # uint256
#   Loanee: Bytes! # address
#   loanAmountPerFraction: BigInt! # uint256
#   interestPerFractionInPercentage: BigInt! # uint256
#   repayByTimeStamp: BigInt! # uint256
#   status: Int! # uint8
# }

# type InterestPaid @entity {
#   id: ID!
#   lendingNumber: BigInt! # uint256
#   numberOfInvesters: BigInt! # uint256
#   numberOfFractionsInvested: BigInt! # uint256
#   invester: Bytes! # address
#   amountInvestedByInvester: BigInt! # uint256
# }

type LendedForLoan @entity {
  id: ID!
  lendingNumber: BigInt! # uint256
  fractionalisedId: BigInt! # uint256
  fractionalisedNftAddress: Bytes! # address
  numberOfFractions: BigInt! # uint256
  numberOfFractionsInvested: BigInt! # uint256
  Loanee: Bytes! # address
  numberOfInvesters: BigInt! # uint256
  loanAmountPerFraction: BigInt! # uint256
  interestPerFractionInPercentage: BigInt! # uint256
  repayByTimeStamp: BigInt! # uint256
  startedAt: BigInt! # uint256
  status: Int! # uint8
  investers: [InvesterLendedForLoan!]! @derivedFrom(field: "lendedforloan") # address
}

type Invester @entity {
  id: ID! #invester addreaa
  invester: LendedForLoan! #invester addreaa
  lendedforlaons: [InvesterLendedForLoan!]! @derivedFrom(field: "invester")
}

type InvesterLendedForLoan @entity {
  id: ID!
  amount: BigInt!
  invester: Invester!
  lendedforloan: LendedForLoan!
}
# type Investment @entity {5
#   id: ID!
#   lendingNummber: Invester!
#   amount: BigInt!
# }

# type Invested @entity {
#   id: ID!
#   lendingNumber: BigInt! # uint256
#   numberOfFractionsInvested: BigInt! # uint256
#   numberOfInvesters: BigInt! # uint256
#   startedAt: BigInt! # uint256
#   status: Int! # uint8
#   invester: Bytes! # address
#   amountInvestedByInvester: BigInt! # uint256
# }

# type REIMarketOwnershipTransferred @entity {
#   id: ID!
#   previousOwner: Bytes! # address
#   newOwner: Bytes! # address
# }

# type Repayed @entity {
#   id: ID!
#   lendingNumber: BigInt! # uint256
#   status: Int! # uint8
# }

# type WithDrawalLoan @entity {
#   id: ID!
#   lendingNumber: BigInt! # uint256
#   status: Int! # uint8
# }

# type WithdrawalBeforeFunded @entity {
#   id: ID!
#   lendingNumber: BigInt! # uint256
#   numberOfFractionsInvested: BigInt! # uint256
#   numberOfInvesters: BigInt! # uint256
#   invester: Bytes! # address
#   amountInvestedByInvester: BigInt! # uint256
# }
type ApproverAccess @entity {
  id: ID!
  user: Bytes!
  bool: Boolean!
}
